# Generated by Django 4.2.3 on 2023-08-08 20:21

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(choices=[('Mercedes-Benz', 'Мерседес-бенц'), ('Land Rover', 'Лендровер'), ('BMW', 'БМВ'), ('Volvo', 'Вольво'), ('Chevrolet', 'Шевролед'), ('Volkswagen', 'Фольксваген'), ('Honda', 'Хонда'), ('Audi', 'Ауди'), ('Hyundai', 'Хендай'), ('Ford', 'Форд'), ('Kia', 'Киа'), ('Lexus', 'Лексус'), ('Mitsubishi', 'Мицубиси'), ('Renault', 'Рено'), ('Opel', 'Опель'), ('Subaru', 'Субару'), ('Mazda', 'Мазда'), ('Porsche', 'Порше'), ('Daewoo', 'Дэу'), ('Lada', 'Лада'), ('Suzuki', 'Сузуки'), ('Infiniti', 'Инфинити'), ('SsangYong', 'Ссанг Йонг'), ('Nissan', 'Ниссан'), ('Toyota', 'Тойота')], max_length=50, verbose_name='Марка автомобиля')),
                ('transfer_image', models.ImageField(upload_to='transfer/housing', verbose_name='Изображение автомобиля')),
                ('description', models.TextField(blank=True, verbose_name='Описание автомобиля')),
                ('category', models.CharField(choices=[('Car', 'Легковушка'), ('Minivan', 'Минивэн'), ('SUV', 'Внедорожник'), ('Bus', 'Автобус'), ('Crossover', 'Кроссовер')], max_length=50, verbose_name='Категория автомобиля')),
                ('body_type', models.CharField(choices=[('Sedan', 'Седан'), ('Coupe', 'Купе'), ('Hatchback', 'Хэтчбек'), ('Liftback', 'Лифтбек'), ('Fastback', 'Фастбэк'), ('Wagon', 'Универсал'), ('Crossover', 'Кроссовер'), ('SUV', 'Внедорожник'), ('Passenger van', 'Легковой фургон'), ('Minivan', 'Минивэн'), ('Compact van', 'Компактвэн'), ('Microvan', 'Микровэн'), ('Convertible', 'Кабриолет'), ('Roadster', 'Родстер'), ('Targa', 'Тарга'), ('Landaulet', 'Ландо'), ('Limousine', 'Лимузин')], max_length=50, verbose_name='Тип кузова')),
                ('transmission', models.CharField(choices=[('Manual', 'Механическая'), ('Automatic', 'Автоматическая'), ('Other', 'Другое')], max_length=50, verbose_name='Тип коробки передач')),
                ('steering', models.CharField(choices=[('Left', 'Левый'), ('Right', 'Правый')], max_length=50, verbose_name='Руль')),
                ('drive_type', models.CharField(choices=[('Front', 'Передний'), ('Rear', 'Задний'), ('All-wheel', 'Полный')], max_length=50, verbose_name='Тип привода')),
                ('fuel_type', models.CharField(choices=[('Gasoline', 'Бензин'), ('Gasoline/Gas', 'Бензин/Газ'), ('Gas', 'Газ'), ('Diesel', 'Дизель'), ('Electric', 'Электрический'), ('Other', 'Другое')], max_length=50, verbose_name='Тип топлива')),
                ('color', models.CharField(choices=[('Silver', 'Серебристый'), ('Black', 'Черный'), ('White', 'Белый'), ('Gray', 'Серый'), ('Beige', 'Бежевый'), ('Turquoise', 'Бирюзовый'), ('Burgundy', 'Бордовый'), ('Bronze', 'Бронза'), ('Chameleon', 'Хамелеон'), ('Yellow', 'Жёлтый'), ('Green', 'Зеленый'), ('Gold', 'Золотоый'), ('Brown', 'Коричневый'), ('Purple', 'Фиолетовый'), ('Blue', 'Синий'), ('Red', 'Красный'), ('Orange', 'Оранжевый'), ('Pink', 'Розовый'), ('Lilac', 'Сиреневый'), ('Cherry', 'Вишьня'), ('Eggplant', 'Баклажан'), ('Light blue', 'Голубой')], max_length=50, verbose_name='Цвет автомобиля')),
                ('passenger', models.CharField(choices=[('2', '2 passengers'), ('5', '5 passengers'), ('8', '8 passengers'), ('Other', 'Other')], max_length=50, verbose_name='Вместимость пассажиров')),
                ('condition', models.CharField(choices=[('Good', 'Хорошее'), ('Excellent', 'Идеальное'), ('New', 'Новое')], max_length=50, verbose_name='Состояние автомобиля')),
                ('fuel_consumption', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Расход топлива на 100км')),
                ('minimum_age', models.PositiveIntegerField(verbose_name='Минимальный возраст водителя')),
                ('passenger_capacity', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20)], default=1, verbose_name='Количество пассажирских мест')),
                ('year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1970), django.core.validators.MaxValueValidator(2025)], verbose_name='Год выпуска')),
                ('driving_experience', models.PositiveIntegerField(verbose_name='Минимальный стаж вождения для аренды')),
                ('amenities', multiselectfield.db.fields.MultiSelectField(choices=[('Air conditioning', 'Кондиционер'), ('Parking sensor', 'Датчик парковки'), ('Heated seats and steering wheel', 'Подогрев сидений и руля'), ('Child seat', 'Детское кресло')], max_length=100, verbose_name='Внутренние удобства')),
                ('safety_equipment', multiselectfield.db.fields.MultiSelectField(choices=[('fire_extinguisher', 'Наличие огнетушителя'), ('first_aid_kit', 'Наличие аптечки'), ('spare_wheel', 'Наличие запасного колеса'), ('airbags', 'Наличие подушка безопасности'), ('emergency_tools', 'Наличие инструментов аварийной ситуации'), ('dashboard_camera', 'Наличие авторегистратора')], max_length=100, verbose_name='Наличие системы безопасности')),
                ('pickup_location', models.CharField(choices=[('Bishkek', 'Бишкек'), ('Jalal-Abad', 'Джалал-Абад'), ('Issyk-Kul', 'Иссык-Куль'), ('Osh', 'Ош'), ('Naryn', 'Нарын'), ('Talas', 'Талас'), ('Batken', 'Баткен')], max_length=100, verbose_name='Место получения')),
                ('car_address', models.CharField(max_length=255, verbose_name='Адрес получения')),
                ('return_location', models.CharField(choices=[('Bishkek', 'Бишкек'), ('Jalal-Abad', 'Джалал-Абад'), ('Issyk-Kul', 'Иссык-Куль'), ('Osh', 'Ош'), ('Naryn', 'Нарын'), ('Talas', 'Талас'), ('Batken', 'Баткен')], max_length=100, verbose_name='Место возврата')),
                ('check_in_time', models.TimeField(verbose_name='Время заезда')),
                ('check_out_time', models.TimeField(verbose_name='Время отъезда')),
                ('can_arrange_pickup_return', models.BooleanField(default=True, verbose_name='Может ли клиент договориться о месте получения/возврата автомобиля')),
                ('operating_area', multiselectfield.db.fields.MultiSelectField(choices=[('Bishkek', 'Бишкек'), ('Jalal-Abad', 'Джалал-Абад'), ('Issyk-Kul', 'Иссык-Куль'), ('Osh', 'Ош'), ('Naryn', 'Нарын'), ('Talas', 'Талас'), ('Batken', 'Баткен'), ('По всему КР', 'По всему КР')], max_length=100, verbose_name='Территории эксплуатации')),
                ('currency', models.CharField(choices=[('KGS', 'Сом (KGS)'), ('USD', 'Доллар (USD)'), ('EUR', 'Евро (EUR)')], max_length=10, verbose_name='Валюта')),
                ('rental_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма аренды (Сутки)')),
                ('payment_method', models.CharField(choices=[('Pay now', 'К оплате сейчас'), ('Prepayment', 'Предоплата'), ('Cash payment', 'Оплата наличными')], max_length=20, verbose_name='Способ оплаты')),
            ],
            options={
                'verbose_name': 'Трансфер',
                'verbose_name_plural': 'Трансферы',
            },
        ),
        migrations.CreateModel(
            name='TransferReservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transfer_location', models.CharField(max_length=255, verbose_name='Место получения трансфера')),
                ('destination_location', models.CharField(max_length=255, verbose_name='Куда вы хотите поехать')),
                ('pickup_date', models.DateField(validators=[django.core.validators.MinValueValidator(datetime.date(2023, 8, 8))], verbose_name='Дата получения трансфера')),
                ('return_date', models.DateField(validators=[django.core.validators.MinValueValidator(datetime.date(2023, 8, 8))], verbose_name='Дата возврата трансфера')),
                ('pickup_time', models.TimeField(verbose_name='Время получения трансфера')),
                ('return_time', models.TimeField(verbose_name='Время возврата трансфера')),
                ('return_location', models.CharField(max_length=255, verbose_name='Место возврата трансфера')),
                ('different_pickup_places', models.BooleanField(default=False, verbose_name='Разные места получения')),
                ('with_driver', models.BooleanField(default=False, verbose_name='Трансфер с водителем')),
                ('transfer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='travel_service.transfer', verbose_name='Трансфер')),
            ],
            options={
                'verbose_name': 'Бронь трансфера',
                'verbose_name_plural': 'Бронь Трансферов',
            },
        ),
    ]
